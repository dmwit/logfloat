----------------------------------------------------------------
-- wren ng thornton <wren@community.haskell.org>    ~ 2009.01.29
----------------------------------------------------------------

Name:           logfloat
Version:        0.11.1
Cabal-Version:  >= 1.2
Build-Type:     Simple
Stability:      experimental
Copyright:      Copyright (c) 2007--2009 wren ng thornton
License:        BSD3
License-File:   LICENSE
Author:         wren ng thornton
Maintainer:     wren@community.haskell.org
Homepage:       http://code.haskell.org/~wren/
Category:       Data, Math, Natural Language Processing
Synopsis:       Log-domain floating point numbers
Description:    This module presents a type for storing numbers
                in the log-domain. The main reason for doing this
                is to prevent underflow when multiplying many
                probabilities as is done in Hidden Markov Models.
                It is also helpful for preventing overflow.

-- Doing it this way uncovers a bug in Cabal-1.2.3.0:
-- "Setup.hs: 'parseField' called on a non-field.  This is a bug."
--Flag hiddenPrim
--    Description: Use GHC 6.10's newly hidden package for GHC.Prim
--    if impl(ghc >= 6.10)
--        Default: true
--    else
--        Default: false

Flag splitBase
    Description: base-3.0 broke out array and other packages
    Default:     False
    
Library
    Exposed-Modules: Data.Number.LogFloat
                   , Data.Number.RealToFrac
                   , Data.Number.Transfinite
                   , Data.Number.PartialOrd
                   , Hugs.RealFloat
    if flag(splitBase)
        Build-depends: base >= 3.0, array
    else
        Build-depends: base < 3.0
-- No longer needed since we use GHC.Exts instead
--    if flag(hiddenPrim)
--        Build-Depends: ghc-prim
    Hugs-Options: -98 +o -F'cpp -P -traditional -D__HUGS__=200609'
    if impl(ghc < 6.10)
        GHC-Options: -fno-warn-orphans

----------------------------------------------------------------
----------------------------------------------------------- fin.
